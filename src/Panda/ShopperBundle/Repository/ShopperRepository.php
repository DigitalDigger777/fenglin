<?php

namespace Panda\ShopperBundle\Repository;

/**
 * ShopperRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ShopperRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @var \Panda\ShopperBundle\Entity\Shopper | null
     */
    private $shopper = null;

    /**
     * @param $email
     * @param bool $chain
     * @return null|object|\Panda\ShopperBundle\Entity\Shopper|ShopperRepository
     */
    public function findByEmail($email, $chain = false)
    {
        $this->shopper = $this->findOneBy([
            'email' => $email
        ]);

        return $chain ? $this : $this->shopper;
    }

    /**
     * @param $apiKey
     * @param bool $chain
     * @return null|object|\Panda\ShopperBundle\Entity\Shopper|ShopperRepository
     */
    public function findByApiKey($apiKey, $chain = false)
    {
        $this->shopper = $this->findOneBy([
            'apiKey' => $apiKey
        ]);

        return $chain ? $this : $this->shopper;
    }

    /**
     * @param $shopperId
     * @param $consumerId
     * @return mixed
     */
    public function checkJoinToConsumer($shopperId, $consumerId)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('COUNT(s)')
            ->from('PandaShopperBundle:Shopper', 's')
            ->join('s.followConsumers', 'c')
            ->where($qb->expr()->andX(
                $qb->expr()->eq('c.id', ':consumerId'),
                $qb->expr()->eq('s.id', ':shopperId')
            ))
            ->setParameter(':consumerId', $consumerId)
            ->setParameter(':shopperId', $shopperId);

        $result = $qb->getQuery()->getSingleScalarResult();

        return $result;
    }
}
